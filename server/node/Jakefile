var compressTool = 'yuicompressor-2.4.7.jar',
    charset = 'utf-8',
    fs = require('fs');

function rediner(arr){
    for ( var i = 0 ; i < arr.length ; i++ ){
        var _cdata = "<%" + fs.readFileSync('../core/' + arr[i] + "-min.js", 'utf-8') + "%>";
        fs.writeFileSync('../core/' + arr[i] + "-min.asp", _cdata, "utf-8");
        console.log('    * [ ../core/' + arr[i] + "-min.asp ] create success..");
        fs.unlinkSync('../core/' + arr[i] + '.js');
        console.log('    * [ ../core/' + arr[i] + ".js ] delete success..");
        fs.unlinkSync('../core/' + arr[i] + '-min.js');
        console.log('    * [ ../core/' + arr[i] + "-min.js ] delete success..");
    }

    console.log("all files done complete..");
}

console.log('\n\n\n\n # start pack asp module files..');

task('sync-asp', function(){
    fs.readdir('../core', function(er, files){
        var arrays = [], _arrays = [];
        for ( var i in files ){
            var file = files[i];  
            if ( files[i].indexOf("-min") === -1 ){
                var cdata = fs.readFileSync('../core/' + file, 'utf-8').replace(/\<\%/, '').replace(/\%\>/, ''),
                    jsName = file.split(".")[0],
                    _cdata;

                fs.writeFileSync('../core/' + jsName + ".js", cdata, "utf-8");
                console.log("    -- [ " + file + " ] is translated by js");
                arrays.push(jsName);

            }
        }
        for ( var j = 0 ; j < arrays.length ; j++ ){
            _arrays.push("java -jar " + compressTool + " ../core/" + arrays[j] + ".js -o ../core/" + arrays[j] + "-min.js --charset utf-8");
            console.log("    * [ " + arrays[j] + ".js ] ready to translate.");
        }
        jake.exec(_arrays, function(){
            console.log("exec complete.");
            rediner(arrays);
            complete();
        }, {stdout:true});
    });
}, {async: true});